services:
  app:
    build:
      context: ./rating-app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SERVER_ADDRESS=0.0.0.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ratingdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - MAIL_USERNAME=nasznetflixgdansk@gmail.com
      - MAIL_PASSWORD=pflybtwmurfplegq
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ADMIN_EMAIL=admin@admin.com
      - ADMIN_PASSWORD=admin
      - JWT_SECRET_KEY=HpiYKXbeLICG5S29p/lAg5eGQ0FcaeVFB9d0pVF5pfw=
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ratingdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    command: postgres -c 'max_connections=500'
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
    name: rating-system-postgres-data
  redis_data:
    name: rating-system-redis-data
